@page "/temperaturePieChartJsGraph";
@inject HttpClient Http;
@using WebCore.Data;
@using ChartJs.Blazor.Charts;
@using ChartJs.Blazor.ChartJS;
@using ChartJs.Blazor.ChartJS.Common.Properties;
@using ChartJs.Blazor.ChartJS.Common.Utils;
@using ChartJs.Blazor.ChartJS.Common.Enums;
@using ChartJs.Blazor.ChartJS.Common.Axes;
@using ChartJs.Blazor.ChartJS.Common.Axes.Ticks;
@using ChartJs.Blazor.ChartJS.Common.Time;
@using ChartJs.Blazor.ChartJS.Common.Handlers;
@using ChartJs.Blazor.ChartJS.Common.Wrappers;
@using ChartJs.Blazor.ChartJS.PieChart;
@using System.Net.Http;


<h2>Pie Chart </h2>

<ChartJsPieChart @ref="_pieChartJs" Config="@_config" Width="600" Height="300" />

@code
{
    private PieConfig _config;
    private ChartJsPieChart _pieChartJs;

    protected override void OnInitialized()
    {
        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

        var pieSet = new PieDataset
        {
            BackgroundColor = new[] { "brown", "yellow", "read", "blue" },
            BorderWidth = 0,
            HoverBackgroundColor = "black",
            HoverBorderColor = "pink",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff"
        };

        pieSet.Data.AddRange(new double[] { 4, 5, 6, 7 });
        _config.Data.Datasets.Add(pieSet);
    }
}