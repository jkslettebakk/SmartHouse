@page "/temperatureData"
@inject HttpClient Http

<h1>Show graph from SmartHouse sensors</h1>

<p>This component demonstrates fetching data from the server trough api's.</p>

@if (temperatureMeassured == null)
{
    <p><em>Loading....</em></p>
}
else
{
    <div>
        <p>Number of temperature meassurments is @TemperatureMeassurements</p>

    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Tank temp</th>
                <th>VP trip tmp.</th>
                <th>VP return tmp.</th>
                <th>VP Floor return</th>
                <th>VP Floor trip</th>
                <th>Inndoor</th>
                <th>Outdoor</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var temp in temperatureMeassured)
            {
                <tr>
                    <td>@temp.SensorTankTimeStamp</td>
                    <td>@temp.SensorTankTemp</td>
                    <td>@temp.SensorVpTurTemp</td>
                    <td>@temp.SensorVpReturTemp</td>
                    <td>@temp.SensorGulvReturTankTemp</td>
                    <td>@temp.SensorGulvTurTankTemp</td>
                    <td>@temp.IndorTemperature</td>
                    <td>@temp.OutdorTemperature</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private TemperatureSensors[] temperatureMeassured;
    string baseUrl = "https://smarthouseapi.slettebakk.com/";
    int TemperatureMeassurements;

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        temperatureMeassured = await Http.GetJsonAsync<TemperatureSensors[]>($"{baseUrl}api/TemperatureSensors");

        TemperatureMeassurements = temperatureMeassured.Length;
    }

}
